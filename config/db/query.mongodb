use("db_campus_alquiler");
db.createCollection('Cliente');
// db.createCollection("Cliente", {
//     capped: true,
//     size: 700,
//     max: 5,
//     validator: {
//         $jsonSchema: {
//             bsonType:'object',
//             additionalProperties: false,
//             required: ["ID", "Nombre", "Apellido", "DNI"],
//             properties: {
//                 _id: {
//                     bsonType: 'objectId'
//                 },
//                 Nombre: {
//                     bsonType: 'string',
//                     description: '{"status": "402", "message": "El Nombre_cliente es obligatorio y solo resive letras"}',
//                     pattern:"^[a-zA-Z ]+$"
//                 },
//                 Apellido: {
//                     bsonType: 'string',
//                     description: '{"status": "402", "message": "El Apellido_cliente es obligatorio y solo resive letras"}',
//                     pattern: "^[a-zA-Z ]+$"
//                 },
//                 DNI: {
//                     bsonType: 'int',
//                     description: '{"status": "402", "message": "El DNI_cliente es obligatorio y solo resive letras"}',
//                     pattern: "/^[0-9]+$/"
//                 },
//                 Direccion: {
//                     bsonType: 'int',
//                     description: '{"status": "402", "message": "El Direccion_cliente es obligatorio y solo resive letras"}',
//                     pattern:"/^[a-zA-Z0-9\s\-\#]+$/"
//                 },
//                 Telefono: {
//                     bsonType: 'int',
//                     description: '{ "status": "402", "message": "El Telefono_cliente es obligatorio y solo resive letras" }',
//                     pattern: "/^[0-9]+$/"
//                 },
//                 Email: {
//                     bsonType: 'int',
//                     description: '{ "status": "402", "message": "El Email_cliente es obligatorio y solo resive letras" }'
//                 }
//             }
//         }
//     }
// })
db.Cliente.insertMany([
    {
        ID: 1,
        Nombre: 'Juan',
        Apellido: 'Perez',
        DNI: '12345678',
        Direccion: 'Calle 123',
        Telefono: '11111111',
        Email: 'juan@example.com'
    },
    {
        ID: 2,
        Nombre: 'Maria',
        Apellido: 'Lopez',
        DNI: '87654321',
        Direccion: 'Avenida 456',
        Telefono: '22222222',
        Email: 'maria@example.com'
    },
    {
        ID: 3,
        Nombre: 'Pedro',
        Apellido: 'Gonzalez',
        DNI: '56789012',
        Direccion: 'Plaza 789',
        Telefono: '33333333',
        Email: 'pedro@example.com'
    },
    {
        ID: 4,
        Nombre: 'Laura',
        Apellido: 'Martinez',
        DNI: '09876543',
        Direccion: 'Ruta 101',
        Telefono: '44444444',
        Email: 'laura@example.com'
    },
    {
        ID: 5,
        Nombre: 'Carlos',
        Apellido: 'Gomez',
        DNI: '43210987',
        Direccion: 'Calle 987',
        Telefono: '55555555',
        Email: 'carlos@example.com'
    }
]);

db.createCollection('Automovil');

db.Automovil.insertMany([
    {
        ID: 1,
        Marca: 'Toyota',
        Modelo: 'Corolla',
        Anio: 2021,
        Tipo: 'Sedan',
        Capacidad: 5,
        Precio_Diario: 50.00
    },
    {
        ID: 2,
        Marca: 'Honda',
        Modelo: 'Civic',
        Anio: 2020,
        Tipo: 'Sedan',
        Capacidad: 5,
        Precio_Diario: 45.00
    },
    {
        ID: 3,
        Marca: 'Ford',
        Modelo: 'Explorer',
        Anio: 2019,
        Tipo: 'SUV',
        Capacidad: 7,
        Precio_Diario: 60.00
    },
    {
        ID: 4,
        Marca: 'Chevrolet',
        Modelo: 'Equinox',
        Anio: 2022,
        Tipo: 'SUV',
        Capacidad: 5,
        Precio_Diario: 55.00
    },
    {
        ID: 5,
        Marca: 'Nissan',
        Modelo: 'Sentra',
        Anio: 2022,
        Tipo: 'Sedan',
        Capacidad: 4,
        Precio_Diario: 48.00
    }
]);

db.createCollection('Sucursal');

db.Sucursal.insertMany([
    {
        ID: 1,
        Nombre: 'Sucursal A',
        Direccion: 'Calle Principal 123',
        Telefono: '1111111111',
        AutomovilesDisponibles: [
            { ID_Automovil: 1, Cantidad_Disponible: 3 }
        ]
    },
    {
        ID: 2,
        Nombre: 'Sucursal B',
        Direccion: 'Avenida Central 456',
        Telefono: '2222222222',
        AutomovilesDisponibles: [
            { ID_Automovil: 2, Cantidad_Disponible: 5 }
        ]
    },
    {
        ID: 3,
        Nombre: 'Sucursal C',
        Direccion: 'Plaza Principal 789',
        Telefono: '3333333333',
        AutomovilesDisponibles: [
            { ID_Automovil: 3, Cantidad_Disponible: 2 }
        ]
    },
    {
        ID: 4,
        Nombre: 'Sucursal D',
        Direccion: 'Ruta Secundaria 101',
        Telefono: '4444444444',
        AutomovilesDisponibles: [
            { ID_Automovil: 4, Cantidad_Disponible: 4 }
        ]
    },
    {
        ID: 5,
        Nombre: 'Sucursal E',
        Direccion: 'Carretera Principal 987',
        Telefono: '5555555555',
        AutomovilesDisponibles: [
            { ID_Automovil: 5, Cantidad_Disponible: 1 }
        ]
    }
]);


db.createCollection('Contrato');

db.Contrato.insertMany([
    {
        ID: 1,
        ID_Cliente: 1,
        ID_Automovil: 3,
        Fecha_Inicio: ISODate('2023-07-01'),
        Fecha_Fin: ISODate('2023-07-05'),
        Costo_Total: 240.00,
        Estado: 'Activo',
        Tipo: 'Alquiler'
    },
    {
        ID: 2,
        ID_Cliente: 2,
        ID_Automovil: 4,
        Fecha_Inicio: ISODate('2023-07-02'),
        Fecha_Fin: ISODate('2023-07-07'),
        Costo_Total: 275.00,
        Estado: 'Disponible',
        Tipo: 'Alquiler'
    },
    {
        ID: 3,
        ID_Cliente: 3,
        ID_Automovil: 1,
        Fecha_Inicio: ISODate('2023-07-03'),
        Fecha_Fin: ISODate('2023-07-06'),
        Costo_Total: 150.00,
        Estado: 'Activo',
        Tipo: 'Alquiler'
    },
    {
        ID: 4,
        ID_Cliente: 4,
        ID_Automovil: 5,
        Fecha_Inicio: ISODate('2023-07-04'),
        Fecha_Fin: ISODate('2023-07-08'),
        Costo_Total: 192.00,
        Estado: 'Activo',
        Tipo: 'Alquiler'
    },
    {
        ID: 5,
        ID_Cliente: 5,
        ID_Automovil: 2,
        Fecha_Inicio: ISODate('2023-07-05'),
        Fecha_Fin: ISODate('2023-07-09'),
        Costo_Total: 225.00,
        Estado: 'Disponible',
        Tipo: 'Alquiler'
    },
    {
        ID: 6,
        ID_Cliente: 2,
        ID_Automovil: 1,
        Fecha_Inicio: ISODate('2023-07-06'),
        Fecha_Fin: ISODate('2023-07-10'),
        Estado: 'Pendiente',
        Tipo: 'Reserva'
    },
    {

        ID: 7,
        ID_Cliente: 3,
        ID_Automovil: 3,
        Fecha_Inicio: ISODate('2023-07-07'),
        Fecha_Fin: ISODate('2023-07-12'),
        Estado: 'Pendiente',
        Tipo: 'Reserva'
    },
    {
        ID: 8,
        ID_Cliente: 4,
        ID_Automovil: 2,
        Fecha_Inicio: ISODate('2023-07-08'),
        Fecha_Fin: ISODate('2023-07-14'),
        Estado: 'Pendiente',
        Tipo: 'Reserva'
    },
    {
        ID: 9,
        ID_Cliente: 5,
        ID_Automovil: 4,
        Fecha_Inicio: ISODate('2023-07-09'),
        Fecha_Fin: ISODate('2023-07-15'),
        Estado: 'Pendiente',
        Tipo: 'Reserva'
    },
    {
        ID: 10,
        ID_Cliente: 1,
        ID_Automovil: 5,
        Fecha_Inicio: ISODate('2023-07-10'),
        Fecha_Fin: ISODate('2023-07-16'),
        Estado: 'Pendiente',
        Tipo: 'Reserva'
    },
]);


db.createCollection('Registro');

db.Registro.insertMany([
    {
        ID: 1,
        ID_Contrato: 1,
        ID_Empleado: 3,
        Fecha_Entrega: ISODate('2023-07-05'),
        Combustible_Entregado: 40.00,
        Kilometraje_Entregado: 2000,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 2,
        ID_Contrato: 2,
        ID_Empleado: 4,
        Fecha_Entrega: ISODate('2023-07-07'),
        Combustible_Entregado: 30.00,
        Kilometraje_Entregado: 1800,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 3,
        ID_Contrato: 3,
        ID_Empleado: 1,
        Fecha_Entrega: ISODate('2023-07-06'),
        Combustible_Entregado: 45.00,
        Kilometraje_Entregado: 2200,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 4,
        ID_Contrato: 4,
        ID_Empleado: 5,
        Fecha_Entrega: ISODate('2023-07-08'),
        Combustible_Entregado: 50.00,
        Kilometraje_Entregado: 2400,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 5,
        ID_Contrato: 5,
        ID_Empleado: 2,
        Fecha_Entrega: ISODate('2023-07-09'),
        Combustible_Entregado: 35.00,
        Kilometraje_Entregado: 1900,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 6,
        ID_Contrato: 1,
        ID_Empleado: 3,
        Fecha_Devolucion: ISODate('2023-07-10'),
        Combustible_Devuelto: 10.00,
        Kilometraje_Devuelto: 2500,
        Monto_Adicional: 20.00,
        Tipo_Registro: 'Devolucion'
    },
    {
        ID: 7,
        ID_Contrato: 2,
        ID_Empleado: 4,
        Fecha_Devolucion: ISODate('2023-07-12'),
        Combustible_Devuelto: 15.00,
        Kilometraje_Devuelto: 2100,
        Monto_Adicional: 15.00,
        Tipo_Registro: 'Devolucion'
    },
    {
        ID: 8,
        ID_Contrato: 3,
        ID_Empleado: 1,
        Fecha_Devolucion: ISODate('2023-07-11'),
        Combustible_Devuelto: 20.00,
        Kilometraje_Devuelto: 2300,
        Monto_Adicional: 25.00,
        Tipo_Registro: 'Devolucion'
    },
    {
        ID: 9,
        ID_Contrato: 4,
        ID_Empleado: 5,
        Fecha_Devolucion: ISODate('2023-07-13'),
        Combustible_Devuelto: 25.00,
        Kilometraje_Devuelto: 2600,
        Monto_Adicional: 30.00, Tipo_Registro: 'Devolucion'
    },
    {
        ID: 10,
        ID_Contrato: 5,
        ID_Empleado: 2,
        Fecha_Devolucion: ISODate('2023-07-14'),
        Combustible_Devuelto: 18.00,
        Kilometraje_Devuelto: 2000,
        Monto_Adicional: 12.00,
        Tipo_Registro: 'Devolucion'
    }
]);

db.createCollection('Empleado');
db.Empleado.insertMany([
    {
        ID: 1,
        Nombre: 'Ana',
        Apellido: 'Gomez',
        DNI: '123456789',
        Direccion: 'Calle 111',
        Telefono: '1111111111',
        Cargo: 'Gerente'
    },
    {
        ID: 2,
        Nombre: 'Luis',
        Apellido: 'Rodriguez',
        DNI: '987654321',
        Direccion: 'Avenida 222',
        Telefono: '2222222222',
        Cargo: 'Asistente'
    },
    {
        ID: 3,
        Nombre: 'Elena',
        Apellido: 'Fernandez',
        DNI: '456789012',
        Direccion: 'Plaza 333',
        Telefono: '3333333333',
        Cargo: 'Vendedor'
    },
    {
        ID: 4,
        Nombre: 'Mario',
        Apellido: 'Torres',
        DNI: '210987654',
        Direccion: 'Ruta 444',
        Telefono: '4444444444',
        Cargo: 'Recepcionista'
    },
    {
        ID: 5,
        Nombre: 'Carlos',
        Apellido: 'Hernandez',
        DNI: '543210987',
        Direccion: 'Carretera 555',
        Telefono: '5555555555',
        Cargo: 'Chofer'
    }
]);


db.createCollection('Registro');

db.Registro.insertMany([
    {
        ID: 1,
        ID_Contrato: 1,
        ID_Empleado: 3,
        Fecha_Entrega: ISODate('2023-07-05'),
        Combustible_Entregado: 40.00,
        Kilometraje_Entregado: 2000,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 2,
        ID_Contrato: 2,
        ID_Empleado: 4,
        Fecha_Entrega: ISODate('2023-07-07'),
        Combustible_Entregado: 30.00,
        Kilometraje_Entregado: 1800,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 3,
        ID_Contrato: 3,
        ID_Empleado: 1,
        Fecha_Entrega: ISODate('2023-07-06'),
        Combustible_Entregado: 45.00,
        Kilometraje_Entregado: 2200,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 4,
        ID_Contrato: 4,
        ID_Empleado: 5,
        Fecha_Entrega: ISODate('2023-07-08'),
        Combustible_Entregado: 50.00,
        Kilometraje_Entregado: 2400,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 5,
        ID_Contrato: 5,
        ID_Empleado: 2,
        Fecha_Entrega: ISODate('2023-07-09'),
        Combustible_Entregado: 35.00,
        Kilometraje_Entregado: 1900,
        Tipo_Registro: 'Entrega'
    },
    {
        ID: 6,
        ID_Contrato: 1,
        ID_Empleado: 3,
        Fecha_Devolucion: ISODate('2023-07-10'),
        Combustible_Devuelto: 10.00,
        Kilometraje_Devuelto: 2500,
        Monto_Adicional: 20.00,
        Tipo_Registro: 'Devolucion'
    },
    {
        ID: 7,
        ID_Contrato: 2,
        ID_Empleado: 4,
        Fecha_Devolucion: ISODate('2023-07-12'),
        Combustible_Devuelto: 15.00,
        Kilometraje_Devuelto: 2100,
        Monto_Adicional: 15.00,
        Tipo_Registro: 'Devolucion'
    },
    {
        ID: 8,
        ID_Contrato: 3,
        ID_Empleado: 1,
        Fecha_Devolucion: ISODate('2023-07-11'),
        Combustible_Devuelto: 20.00,
        Kilometraje_Devuelto: 2300,
        Monto_Adicional: 25.00,
        Tipo_Registro: 'Devolucion'
    },
    {
        ID: 9,
        ID_Contrato: 4,
        ID_Empleado: 5,
        Fecha_Devolucion: ISODate('2023-07-13'),
        Combustible_Devuelto: 25.00,
        Kilometraje_Devuelto: 2600,
        Monto_Adicional: 30.00, Tipo_Registro: 'Devolucion'
    },
    {
        ID: 10,
        ID_Contrato: 5,
        ID_Empleado: 2,
        Fecha_Devolucion: ISODate('2023-07-14'),
        Combustible_Devuelto: 18.00,
        Kilometraje_Devuelto: 2000,
        Monto_Adicional: 12.00,
        Tipo_Registro: 'Devolucion'
    }
]);

//*Consultas Alquiler_de_autos

//? 2.Mostrar todos los clientes registrados en la base de datos ✅

use("db_campus_alquiler");
db.Cliente.find({},{_id:0});

//? 3.Obtener todos los automóviles disponibles para alquiler ✅
use("db_campus_alquiler");
db.getCollection("Contrato").aggregate([
    {
        $lookup: {
          from: "Automovil",
            localField: "ID_Automovil",
            foreignField: "ID",
          as: "AutomovilesDeAlquiler"
        }
    },
    {
        $match: {
          Estado:"Disponible"
        }
    },
    {
        $project: {
            _id: 0,
            "AutomovilesDeAlquiler._id": 0
        }
    }
]);
db.Contrato.find({Estado:"Disponible"}, { _id: 0 });

//? 4.Listar todos los alquileres activos junto con los datos de los clientes relacionados ✅
use("db_campus_alquiler");
db.getCollection("Contrato").aggregate([
    {
        $match: {
            Estado: "Activo"
        }
    },
    {
        $lookup: {
            from: "Cliente",
            localField: "ID_Cliente",
            foreignField: "ID",
            as: "Cliente"
        }
    },
    {
        $project: {
            "Cliente._id": 0,
            ID_Cliente:0,
            Fecha_Fin: 0,
            Fecha_Inicio: 0,
            _id: 0
        }
    }
]);
//? 5.Mostrar todas las reservas pendientes con los datos del cliente y el automóvil reservado ✅
use("db_campus_alquiler");
db.getCollection("Contrato").aggregate([
    {
        $match: {
            Estado: "Pendiente"
        }
    },
    {
        $lookup: {
            from: "Cliente",
            localField: "ID_Cliente",
            foreignField: "ID",
            as: "Cliente"
        }
    },
    {
        $lookup: {
            from: "Automovil",
            localField: "ID_Automovil",
            foreignField: "ID",
            as: "Automovil"
        }
    },
    {
        $project: {
            "Cliente._id": 0,
            "Automovil._id": 0,
            ID_Cliente:0,
            ID_Automovil:0,
            _id: 0,
            Fecha_Inicio: 0,
            Fecha_Fin: 0
        }
    }
]);
//? 6.Obtener los detalles del alquiler con el ID_Alquiler específico
use("db_campus_alquiler");
db.Contrato.find({ ID: 3 }, { _id: 0, })
//? 7.Listar los empleados con el cargo de "Vendedor"
use("db_campus_alquiler");
db.Empleado.find({ Cargo:"Vendedor"},{_id:0})
//? 8.Mostrar la cantidad total de automóviles disponibles en cada sucursal.
use("db_campus_alquiler");
db.Sucursal.find({},{_id:0});
//? 9.Obtener el costo total de un alquiler específico
use("db_campus_alquiler");
db.Contrato.find({ ID: 3 }, { Costo_Total :1,_id:0});
//? 10.Listar los clientes con el DNI específico.
use("db_campus_alquiler");
db.Cliente.find({ DNI: "87654321" });
//? 11.Mostrar todos los automóviles con una capacidad mayor a 5 personas
use("db_campus_alquiler");
db.Automovil.find({ Capacidad: { $gt: 5 } });
//? 12.Obtener los detalles del alquiler que tiene fecha de inicio en '2023-07-05'
use("db_campus_alquiler");
db.Contrato.find(
    {
        Fecha_Inicio: { $eq: new Date("2023-07-05") }
    },{_id:0}
);
//? 13.Listar las reservas pendientes realizadas por un cliente específico
use("db_campus_alquiler");
db.Cliente.find({ID:2},{_id:0});
//? 14.Mostrar los empleados de "Gerente" o "Asistente"
use("db_campus_alquiler");
db.Empleado.find({ $or: [ { "Cargo":"Gerente" }, { "Cargo":"Asistente" } ] },{_id:0});
//? 15.Obtener los datos de los clientes que realizaron al menos un alquiler 
use("db_campus_alquiler");
db.getCollection("Contrato").aggregate([
    {
        $match:{
            Tipo:"Alquiler"
        }
    },
    {
        $lookup: {
        from: "Cliente",
        localField: "ID_Cliente",
        foreignField: "ID",
        as: "Cliente"
        }
    },
    {
        $project: {
            "Cliente._id":0,
            _id:0
        }
    }
]);
//? 16.Listar todos los automoviles por marca y modelos
use("db_campus_alquiler");
db.getCollection("Automovil").aggregate([
    {
        $lookup: {
          from: "Contrato",
          localField: "ID",
            foreignField: "ID_Automovil",
          as: "AutosRelacionados"
        }
    },
    {
        $project: {
            "AutosRelacionados._id": 0,
            _id: 0
        }
    }
]);
//? 17.Mostrar la cantidad total de automóviles en cada sucursal junto con su dirección
use("db_campus_alquiler");
db.getCollection("Sucursal").aggregate([
    {
        $project: {
            "AutomovilDeSucursal._id": 0,
          _id:0
        }
    }
]);
